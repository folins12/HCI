<!DOCTYPE html>
<html>
<head>
  <title>Profilo Utente</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons.min.css">

</head>
<body>
  <div class="profile-container">
    <div class="welcome-message">
      Benvenuto nel tuo profilo <%= @user.nome.capitalize %>!
    </div>


    <div id="profile-view" style="<%= @user.errors.any? ? 'display: none;' : 'display: block;' %>">
      <div class="profile-table">
        <table>
          <tr>
            <th>Nome</th>
            <td><%= @user.nome.capitalize %></td>
          </tr>
          <tr>
            <th>Cognome</th>
            <td><%= @user.cognome.capitalize %></td>
          </tr>
          <tr>
            <th>Email</th>
            <td><%= @user.email %></td>
          </tr>
        </table>
      </div>
      <div class="profile-buttons">
        <button id="edit-profile-button" class="btn btn-primary">Modifica profilo</button>
        <%= link_to 'Logout', logout_path, method: :delete, id: 'logout-button', class: 'btn btn-danger' %>
      </div>
    </div>

    <div id="profile-edit" style="<%= @user.errors.any? ? 'display: block;' : 'display: none;' %>">
      <%= form_with model: @user, url: user_profile_path, local: true do |form| %>
        <div class="input-group <%= 'has-error' if @user.errors[:nome].any? %>">
          <%= form.label :nome, "Nome", class: 'form-label' %>
          <%= form.text_field :nome, value: @user.nome.capitalize, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:cognome].any? %>">
          <%= form.label :cognome, "Cognome", class: 'form-label' %>
          <%= form.text_field :cognome, value: @user.cognome.capitalize, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:current_password].any? %>">
          <%= form.label :current_password, "Password Attuale", class: 'form-label' %>
          <%= form.password_field :current_password, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:password].any? %>">
          <%= form.label :password, "Nuova Password", class: 'form-label' %>
          <%= form.password_field :password %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:password_confirmation].any? %>">
          <%= form.label :password_confirmation, "Conferma Nuova Password", class: 'form-label' %>
          <%= form.password_field :password_confirmation %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:password].any? %>">
          <%= form.label :password, "Nuovo Indirizzo di Casa", class: 'form-label' %>
          <%= form.text_field :address, value: @user.address, required: true %>
        </div>
        <% if flash[:alert].present? %>
          <div class="alert alert-danger">
            <%= flash[:alert] %>
          </div>
        <% end %>
        <div class="profile-buttons">
          <%= form.submit "Invia", class: "btn btn-primary" %>
          <button id="cancel-edit-button" class="btn btn-secondary" onclick="cancelEdit()">Annulla</button>
        </div>
      <% end %>
    </div>
  </div>



  
  <div class="weather-widget" id="weather-widget">
    <p>Caricamento meteo...</p>
  </div>





  <% if @myplants.any? %>
  <div class="plant-message">
    Queste sono le tue piante:
  </div>
    <div class="plants-grid <%= 'single-item' if @myplants.size == 1 %>">
      <% @myplants.each do |plant| %>
        <div class="plant-box">
          <div class="plant-image">
            <%= image_tag "#{plant.name}.jpg", alt: plant.name %>
          </div>
          
          <div class="plant-info">
            <p class="nome"><strong><%= plant.name %></strong></p>
            <p><strong>Tipologia:</strong> <%= plant.typology %></p>
            <p><strong>Luce:</strong> <%= ['ombra completa', 'ombra parziale', 'luce indiretta', 'sole diretto'][plant.light - 1] %></p>
            <p><strong>Irrigazione:</strong> <%= ['raramente', 'ogni tanto', 'frequentemente'][plant.irrigation - 1] %></p>
            <p><strong>Dimensione:</strong> <%= ['piccola', 'media', 'grande'][plant.size - 1] %></p>
            <p><strong>Clima:</strong> <%= plant.climate %></p>
            <p><strong>Uso:</strong> <%= plant.use %></p>
            <p><strong>Descrizione:</strong> <%= plant.description %></p>
          </div>
          
          <div class="btn-removemyplant" data-myplant-id="<%= plant.id %>">
            <p>Rimuovi</p>
          </div>
        </div>
      <% end %>
    <% else %>
      <p class="no-results">La tua collezione è vuota. Aggiungi le piante dalla pagina "PIANTE".</p>
    </div>
  <% end %>
  
  

  <script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function() {
      const reserveButtons = document.querySelectorAll(".btn-removemyplant");
    
      reserveButtons.forEach(button => {
          button.addEventListener("click", function() {
              const myplantId = this.dataset.myplantId;
              const plantBox = this.closest('.plant-box');
              this.style.pointerEvents = "none";
              fetch('/removemyplant', {
                  method: 'POST',
                  headers: {
                      'Content-Type': 'application/json',
                      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                  },
                  body: JSON.stringify({ plant_id: myplantId }) 
              })
              .then(response => {
                  if (!response.ok) {
                      return response.text().then(text => {
                          throw new Error(text);
                      });
                  }
                  return response.json();
              })
              .then(data => {
                  if (data.success) {
                      plantBox.remove(); 
                  } else {
                      alert(data.message || "Errore nella rimozione. Riprova.");
                      this.style.pointerEvents = "auto"; 
                  }
              })
              .catch(error => {
                  console.error('Errore:', error);
                  alert('Errore: ' + error.message);
                  this.style.pointerEvents = "auto";
              });
          });
      });
    });


    document.getElementById("edit-profile-button").addEventListener("click", function() {
      document.getElementById("profile-view").style.display = "none";
      document.getElementById("profile-edit").style.display = "block";
    });

    function cancelEdit() {
      document.getElementById("profile-edit").style.display = "none";
      document.getElementById("profile-view").style.display = "block";
    }
  
    document.addEventListener('DOMContentLoaded', function() {
      const address = "<%= raw @current_user&.address.to_s %>";
      geocodeAddress(address).then(location => {
        if (location) {
          fetchWeatherData(location.lat, location.lng);
        } else {
          document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
        }
      });
    });
    
    async function geocodeAddress(address) {
      const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
      
      try {
        const response = await fetch(url);
        const data = await response.json();
        if (data.length > 0) {
          const location = data[0];
          const latitude = location.lat;
          const longitude = location.lon;
          return { lat: parseFloat(latitude), lng: parseFloat(longitude) };
        } 
        return null;
      } catch (error) {
        console.error('Error fetching geocode data:', error);
        return null;
      }
    }

    function fetchWeatherData(lat, lon) {
      fetch(`/users/fetch_weather?lat=${lat}&lon=${lon}`)
        .then(response => response.json())
        .then(data => {
          //console.log('Weather data:', data);

          if (data.weather) {
            const weather = data.weather;
            const descriptionInEnglish = weather.weather[0].description.toLowerCase();
            const iconCode = weatherIconMapping[descriptionInEnglish] || "01d";
            const iconUrl = weatherIcons[iconCode];

            const descriptionInItalian = weatherDescriptions[descriptionInEnglish] || descriptionInEnglish;

            const widgetContent = `
              <h2 style="color: #004d00;">Meteo Nella Tua Zona</h2>
              <img src="${iconUrl}" alt="Icona meteo" class="weather-icon" style="width: 100px; height: 100px;">
              <p><strong style="color: #004d00;">Temperatura:</strong> ${weather.main.temp}°C</p>
              <p><strong style="color: #004d00;">Condizioni:</strong> ${descriptionInItalian}</p>
              <p><strong style="color: #004d00;">Umidità:</strong> ${weather.main.humidity}%</p>
              <p><strong style="color: #004d00;">Vento:</strong> ${weather.wind.speed} m/s</p>
            `;
            document.getElementById('weather-widget').innerHTML = widgetContent;
          } else {
            document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
          }
        })
        .catch(error => {
          console.error('Errore nel recupero dei dati meteo:', error);
          document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
        });
    }

    const weatherIcons = {
      "01d": "<%= asset_path('weather-icons/01d.png') %>",
      "02d": "<%= asset_path('weather-icons/02d.png') %>",
      "03d": "<%= asset_path('weather-icons/03d.png') %>",
      "04d": "<%= asset_path('weather-icons/04d.png') %>",
      "09d": "<%= asset_path('weather-icons/09d.png') %>",
      "10d": "<%= asset_path('weather-icons/10d.png') %>",
      "11d": "<%= asset_path('weather-icons/11d.png') %>",
    };

    const weatherDescriptions = {
      "clear sky": "cielo sereno",
      "few clouds": "poche nuvole",
      "scattered clouds": "nuvole sparse",
      "broken clouds": "nuvoloso",
      "shower rain": "pioggia leggera",
      "rain": "pioggia",
      "thunderstorm": "temporale",
      "haze": "foschia",
      "fog": "nebbia",
      "overcast clouds": "nuvoloso",
      "light rain": "pioggia leggera",
      "heavy rain": "pioggia intensa",
      "drizzle": "pioviggine",
      "dust": "polvere",
      "sand": "sabbia"
    };

    const weatherIconMapping = {
      "clear sky": "01d",
      "few clouds": "02d",
      "scattered clouds": "03d",
      "broken clouds": "04d",
      "shower rain": "09d",
      "rain": "10d",
      "thunderstorm": "11d",
      "haze": "02d",
      "fog": "02d",
      "overcast clouds": "04d",
      "light rain": "09d",
      "heavy rain": "10d",
      "drizzle": "09d",
      "dust": "02d", 
      "sand": "02d"
    };
  </script>

</body>
</html>
