<!DOCTYPE html>
<html>
<head>
  <title>Profilo Utente</title>
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
</head>
<body>
  <div class="profile-container">
    <div class="welcome-message">
      Benvenuto nel tuo profilo <%= @user.nome %>!
    </div>

    <div id="profile-view" style="<%= @user.errors.any? ? 'display: none;' : 'display: block;' %>">
      <div class="profile-table">
        <table>
          <tr>
            <th>Nome</th>
            <td><%= @user.nome %></td>
          </tr>
          <tr>
            <th>Cognome</th>
            <td><%= @user.cognome %></td>
          </tr>
          <tr>
            <th>Email</th>
            <td><%= @user.email %></td>
          </tr>
        </table>
      </div>
      <div class="edit-button">
        <button id="edit-profile-button" class="lo-button">Modifica profilo</button>
      </div>
    </div>

    <div id="profile-edit" style="<%= @user.errors.any? ? 'display: block;' : 'display: none;' %>">
      <%= form_with model: @user, url: user_profile_path, local: true do |form| %>
        <div class="input-group <%= 'has-error' if @user.errors[:nome].any? %>">
          <%= form.label :nome, "Nome", class: 'form-label' %>
          <%= form.text_field :nome, value: @user.nome, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:cognome].any? %>">
          <%= form.label :cognome, "Cognome", class: 'form-label' %>
          <%= form.text_field :cognome, value: @user.cognome, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:current_password].any? %>">
          <%= form.label :current_password, "Password Attuale", class: 'form-label' %>
          <%= form.password_field :current_password, required: true %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:password].any? %>">
          <%= form.label :password, "Nuova Password", class: 'form-label' %>
          <%= form.password_field :password %>
        </div>
        <div class="input-group <%= 'has-error' if @user.errors[:password_confirmation].any? %>">
          <%= form.label :password_confirmation, "Conferma Nuova Password", class: 'form-label' %>
          <%= form.password_field :password_confirmation %>
        </div>
        <div class="checkbox-container">
          <%= form.label :nursery, "Vivaio", class: 'checkbox-label' %>
          <%= form.check_box :nursery, {}, 'true', 'false' %>
        </div>
        <% if flash[:alert].present? %>
          <div class="alert alert-danger">
            <%= flash[:alert] %>
          </div>
        <% end %>
        <div class="button-container">
          <button type="submit" class="button">Conferma modifiche</button>
        </div>
      <% end %>
    </div>

    <hr class="separator" />


    <div class="weather-widget" id="weather-widget">
  <p>Caricamento meteo...</p>
</div>






    <div class="plant-message">
      Queste sono le tue piante:
    </div>
    <!--
    <div class="plant-panels">
      <% if @plants.present? %>
        <% @myplants.each do |plant| %>
          <div class="plant-panel">
            <span class="plant-name"><%= plant.pianta %></span>
          </div>
        <% end %>
      <% else %>
        <p>Nessuna pianta trovata.</p>
      <% end %>
    </div>-->
    <div class="plants-grid <%= 'single-item' if @myplants.size == 1 %>">
      <% if @myplants.any? %>
        <% @myplants.each do |plant| %>
          <div class="plant-box">
            <div class="plant-image">
              <%= image_tag "#{plant.name}.jpg", alt: plant.name %>
            </div>
            
            <div class="plant-info">
              <p class="nome"><strong><%= plant.name %></strong></p>
              <p><strong>Tipologia:</strong> <%= plant.typology %></p>
              <p><strong>Luce:</strong> <%= ['ombra completa', 'ombra parziale', 'luce indiretta', 'sole diretto'][plant.light - 1] %></p>
              <p><strong>Irrigazione:</strong> <%= ['raramente', 'ogni tanto', 'frequentemente'][plant.irrigation - 1] %></p>
              <p><strong>Dimensione:</strong> <%= ['piccola', 'media', 'grande'][plant.size - 1] %></p>
              <p><strong>Clima:</strong> <%= plant.climate %></p>
              <p><strong>Uso:</strong> <%= plant.use %></p>
              <p><strong>Descrizione:</strong> <%= plant.description %></p>
            </div>
          </div>
        <% end %>
      <% else %>
        <p class="no-results">Non ci sono piante</p>
      <% end %>
    </div>

    <div class="logout-button">
      <%= link_to 'Logout', logout_path, method: :delete, class: 'lo-button' %>
    </div>
  </div>

  <script>
    document.getElementById('edit-profile-button').addEventListener('click', function() {
      document.getElementById('profile-view').style.display = 'none';
      document.getElementById('profile-edit').style.display = 'block';
    });
  </script>

  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
      const address = "<%= raw @current_user&.address.to_s %>";
      geocodeAddress(address).then(location => {
        if (location) {
          fetchWeatherData(location.lat, location.lng);
        } else {
          document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
        }
      });
    });
    
    async function geocodeAddress(address) {
      const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`;
      
      try {
        const response = await fetch(url);
        const data = await response.json();
        if (data.length > 0) {
          const location = data[0];
          const latitude = location.lat;
          const longitude = location.lon;
          return { lat: parseFloat(latitude), lng: parseFloat(longitude) };
        } 
        return null;
      } catch (error) {
        console.error('Error fetching geocode data:', error);
        return null;
      }
    }


    function fetchWeatherData(lat, lon) {
      fetch(`/users/fetch_weather?lat=${lat}&lon=${lon}`)
        .then(response => response.json())
        .then(data => {
          console.log('Weather data:', data); // Debug: Log the weather data

          if (data.weather) {
            const weather = data.weather;
            const widgetContent = `
              <h2>Meteo attuale</h2>
              <p><strong>Temperatura:</strong> ${weather.main.temp}°C</p>
              <p><strong>Condizioni:</strong> ${weather.weather[0].description}</p>
              <p><strong>Umidità:</strong> ${weather.main.humidity}%</p>
              <p><strong>Vento:</strong> ${weather.wind.speed} m/s</p>
            `;
            document.getElementById('weather-widget').innerHTML = widgetContent;
          } else {
            document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
          }
        })
        .catch(error => {
          console.error('Errore nel recupero dei dati meteo:', error);
          document.getElementById('weather-widget').innerHTML = '<p>Meteo non disponibile.</p>';
        });
    }

  </script>

</body>
</html>
